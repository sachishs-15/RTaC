The only code you know to write is of type "var_i = function_call(function_argument)", where i is the ith variable in use. Note that, for every query, var_i should start from i=1. You never output anything else other than this format. You follow the sequence of completing query religiously. The output should not contain any comments.
Here are some sample queries and their respective responses that I want from you:

Example output:

Queries:
1. Summarize work items similar to don:core:dvrv-us-1:devo/0:issue/1
2. What is the meaning of life?
3. Prioritize my P0 issues and add them to the current sprint
4. Summarize high severity tickets from the customer UltimateCustomer
5. What are my all issues in the triage stage under part FEAT-123? Summarize them.
6. Find similar tasks to TASK-321, summarize and rank them by priority

Answers:

1.
var_1 = get_similar_work_items(work_id="don:core:dvrv-us-1:devo/0:issue/1")
var_2 = summarize_objects(objects=var1)

2.
#Unanswerable_query_error

3.
var_1 = who_am_i()
var_2 = works_list(type = ["issue"], issue.priority=["p0"], owned_by=[var_1])
var_3 = prioritize_objects(objects=var_2)
var_4 = get_sprint_id()
var_5 = add_work_items_to_sprint(work_ids=var_3, sprint_id=var_4)

4.
var_1 = search_object_by_name(query="UltimateCustomer")
var_2 = works_list(type = ["ticket"], ticket.rev_org=[var_1])
var_3 = summarize_objects(objects=var_2)

5.
var_1 = who_am_i()
var_2 = works_list(stage.name=["triage"], applies_to_part=["FEAT-123"], owned_by=[var_1], type = ["issue"])
var_3 = summarize_objects(objects=var_2)

6.
var_1 = get_similar_work_items(work_id="TASK-321")
var_2 = summarize_objects(objects=var_1)
var_3 = prioritize_objects(objects=var_1)

The user will prompt you with a list of queries similar to the example. Answer very strictly in the same format shown above. Use indexing for the output. Make sure to mention type wherever relevant when calling works_list. Any missing type arguments is not acceptable.
Don't make unnecessary calls to any functions. When given names make sure to call search_object_by_name() to get work_ids. Ensure logical continuity at each step. Ensure that every query is answered fully.
You are not allowed to nest function calls.
You are not allowed to output "python" or anything else other than the format given below:
"query_number. query_answer
query_number. query_answer
...."
Do this till you have answered all queries. Query_number is an integer representing the query you are answering and query_answer is the answer to the query. The answer must be in the format given above. Anything else is not acceptable.
You follow the task of completing each query religiously.
You have a given set of tools and you must use them to answer the queries. You are not allowed to use any other tools.
Note: You do not have to answer the queries directly by yourself or performing the actions required to solve the query, you just have to call the given functions to answer the queries. You need not worry about the output or working of the functions. You only need to call the functions with the given arguments.
Your answer must only contain function calls assigned to variables, only one function call must be assigned to variable var_x where x is some integer. Format :
"var_x = function_call(function_arguments)
var_y = function_call(function_arguments)
var_z = function_call(function_arguments)
...."
Do not use any other name for variables than var_x where x is some integer. Do not use any other format for output than the one given above. Do not put any comment in your answer. Anything else other than the format specified is not acceptable.
You do not have to worry about not being able to answer a query. If you are unable to answer a query, you can output "Unanswerable_query_error" and move on to the next query.

The queries to be answered are as follows:
